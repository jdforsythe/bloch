"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const elliptic_1 = require("elliptic");
const crypto_js_1 = require("crypto-js");
const uuid_1 = require("uuid");
// https://en.bitcoin.it/wiki/Secp256k1
const ellipticCurve = new elliptic_1.ec('secp256k1');
/**
 * Get a hash from a string
 */
function generateHash(data) {
    return crypto_js_1.SHA256(data).toString();
}
exports.generateHash = generateHash;
/**
 * Get a unique ID
 */
function generateUUID() {
    return uuid_1.v1();
}
exports.generateUUID = generateUUID;
/**
 * Sign a hash with the private key
 */
function signHash(privKey, hash) {
    const keypair = ellipticCurve.keyFromPrivate(privKey, 'hex');
    return keypair.sign(hash).toDER('hex');
}
exports.signHash = signHash;
/**
 * Verify signature against expected hash
 */
function verifySignature(pubKey, signature, expectedHash) {
    try {
        return ellipticCurve.keyFromPublic(pubKey, 'hex').verify(expectedHash, signature);
    }
    catch (ex) {
        return false;
    }
}
exports.verifySignature = verifySignature;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3J5cHRvLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NyeXB0by50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUE4QjtBQUM5Qix5Q0FBNkM7QUFDN0MsK0JBQW9DO0FBRXBDLHVDQUF1QztBQUN2QyxNQUFNLGFBQWEsR0FBRyxJQUFJLGFBQUUsQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUUxQzs7R0FFRztBQUNILFNBQWdCLFlBQVksQ0FBQyxJQUFZO0lBQ3ZDLE9BQU8sa0JBQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUNqQyxDQUFDO0FBRkQsb0NBRUM7QUFFRDs7R0FFRztBQUNILFNBQWdCLFlBQVk7SUFDMUIsT0FBTyxTQUFNLEVBQUUsQ0FBQztBQUNsQixDQUFDO0FBRkQsb0NBRUM7QUFFRDs7R0FFRztBQUNILFNBQWdCLFFBQVEsQ0FBQyxPQUFlLEVBQUUsSUFBWTtJQUNwRCxNQUFNLE9BQU8sR0FBRyxhQUFhLENBQUMsY0FBYyxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUMsQ0FBQztJQUU3RCxPQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3pDLENBQUM7QUFKRCw0QkFJQztBQUVEOztHQUVHO0FBQ0gsU0FBZ0IsZUFBZSxDQUFDLE1BQWMsRUFBRSxTQUFpQixFQUFFLFlBQW9CO0lBQ3JGLElBQUk7UUFDRixPQUFPLGFBQWEsQ0FBQyxhQUFhLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUUsU0FBUyxDQUFDLENBQUM7S0FDbkY7SUFDRCxPQUFPLEVBQUUsRUFBRTtRQUNULE9BQU8sS0FBSyxDQUFDO0tBQ2Q7QUFDSCxDQUFDO0FBUEQsMENBT0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlYyB9IGZyb20gJ2VsbGlwdGljJztcbmltcG9ydCB7IFNIQTI1NiBhcyBzaGEyNTYgfSBmcm9tICdjcnlwdG8tanMnO1xuaW1wb3J0IHsgdjEgYXMgdXVpZFYxIH0gZnJvbSAndXVpZCc7XG5cbi8vIGh0dHBzOi8vZW4uYml0Y29pbi5pdC93aWtpL1NlY3AyNTZrMVxuY29uc3QgZWxsaXB0aWNDdXJ2ZSA9IG5ldyBlYygnc2VjcDI1NmsxJyk7XG5cbi8qKlxuICogR2V0IGEgaGFzaCBmcm9tIGEgc3RyaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZUhhc2goZGF0YTogc3RyaW5nKSB7XG4gIHJldHVybiBzaGEyNTYoZGF0YSkudG9TdHJpbmcoKTtcbn1cblxuLyoqXG4gKiBHZXQgYSB1bmlxdWUgSURcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlVVVJRCgpOiBzdHJpbmcge1xuICByZXR1cm4gdXVpZFYxKCk7XG59XG5cbi8qKlxuICogU2lnbiBhIGhhc2ggd2l0aCB0aGUgcHJpdmF0ZSBrZXlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNpZ25IYXNoKHByaXZLZXk6IHN0cmluZywgaGFzaDogc3RyaW5nKSB7XG4gIGNvbnN0IGtleXBhaXIgPSBlbGxpcHRpY0N1cnZlLmtleUZyb21Qcml2YXRlKHByaXZLZXksICdoZXgnKTtcblxuICByZXR1cm4ga2V5cGFpci5zaWduKGhhc2gpLnRvREVSKCdoZXgnKTtcbn1cblxuLyoqXG4gKiBWZXJpZnkgc2lnbmF0dXJlIGFnYWluc3QgZXhwZWN0ZWQgaGFzaFxuICovXG5leHBvcnQgZnVuY3Rpb24gdmVyaWZ5U2lnbmF0dXJlKHB1YktleTogc3RyaW5nLCBzaWduYXR1cmU6IHN0cmluZywgZXhwZWN0ZWRIYXNoOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZWxsaXB0aWNDdXJ2ZS5rZXlGcm9tUHVibGljKHB1YktleSwgJ2hleCcpLnZlcmlmeShleHBlY3RlZEhhc2gsIHNpZ25hdHVyZSk7XG4gIH1cbiAgY2F0Y2ggKGV4KSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG4iXX0=